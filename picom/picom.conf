
#################################
#
# Backend
#
#################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.

# backend = "xrender";
# backend = "xr_glx_hybrid";
backend = "glx";

#################################
#
# GLX backend
#
#################################

glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
# Useful with --glx-swap-method, as well.
glx-copy-from-front = false;

# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
# glx-use-copysubbuffermesa = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.

glx-no-rebind-pixmap = true;

# enables X11 damage tracking in picom.
# disable to avoid artifacts painting under blur transparent windows.
#use-damage = true;

# transition-length = 300
# transition-pow-x = 0.3
# transition-pow-y = 0.3
# transition-pow-w = 0.3
# transition-pow-h = 0.3
# size-transition = true

#################################
#
# Shadows
#
#################################

# Enabled client-side shadows on windows.
# shadow = true;
shadow = true;

# The blur radius for shadows. (default 12)
shadow-radius = 12;
# The left offset for shadows. (default -15)
shadow-offset-x = -15;
# The top offset for shadows. (default -15)
shadow-offset-y = -15;
# The translucency for shadows. (default .75)
shadow-opacity = 0.75;

# Set if you want different colour shadows
# shadow-red = 1.0;
# shadow-green = 1.0;
# shadow-blue = 1.0;

# The shadow exclude options are helpful if you have shadows enabled. Due to the way compton draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes
# shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.

shadow-exclude = [
    "fullscreen",
    "class_g = 'i3bar'",
    "class_g = 'Xwinwrap'"
];


#################################
#
# Opacity
#
#################################

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
opacity-rule = [
    "85:class_g = 'Alacritty'"
];

inactive-opacity = 0.6;
active-opacity = 1;
frame-opacity = 0.8;
inactive-opacity-override = true;


# Desaturate and darken the inactive windows
# Dim inactive windows. (0.0 - 1.0)

#inactive-dim = 0.2;
#inactive-dim-fixed = true;

# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;

#################################
#     Background-Blurring       #
#################################

blur-background = true;
# # Blur background of opaque windows with transparent frames as well.
# blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = true;

blur: {
   method = "dual_kawase";
   deviation = 1.0;
   strength = 2;
}

blur-background-exclude = [
    "class_g = 'i3bar'",
    "class_g = 'Xwinwrap'",
    "window_type = 'dock'",
	"window_type = 'dropdown_menu'",
	"window_type = 'combo'",
	"window_type = 'popup_menu'",
	"window_type = 'utility'",
    "window_type = 'desktop'",
	"_GTK_FRAME_EXTENTS@"
];

#################################
#
# Fading
#
#################################

fading = true;
# fade-delta = 30;
#fade-in-step = 0.03;
#fade-out-step = 0.03;
fade-in-step = 0.07;
fade-out-step = 0.07;
# no-fading-openclose = true;
# no-fading-destroyed-argb = true;
fade-exclude = [
    "class_g = 'i3bar'",
    "class_g = 'Xwinwrap'"
];

#################################
#           Corners             #
#################################
detect-rounded-corners = true;
detect-client-opacity = true;

corner-radius = 12

rounded-corners-exclude = [
    "class_g = 'i3bar'",
    "class_g = 'Xwinwrap'"
];

#################################
#
# OTHER CONFIG
#
#################################

log-level = "warn";
# log-file = "/path/to/your/log/file";


mark-wmwin-focused = true;
mark-ovredir-focused = true;
# use-ewmh-active-win = true;

# Enable/disable VSync.
vsync = true;

# sw-opti = true;
# unredir-if-possible = true;
# unredir-if-possible-delay = 5000;
# unredir-if-possible-exclude = [ ];

detect-transient = true;
detect-client-leader = true;
invert-color-include = [ ];

resize-damage = 2;


#################################
#
# Window type settings
#
#################################
wintypes:
{
	dock = { shadow = true; }
	dnd = { shadow = false; }
	popup_menu = { opacity = 1; }
	dropdown_menu = { opacity = 1; }
	
	# This avoid problems with transparent windows while use-damage = true;.
	normal = { full-shadow = true;};
};

#################################
#     Animation Settings    #
#################################

animations = (
  {
    triggers = ["close", "hide"];
    opacity = {
      curve = "linear";
      duration = 0.1;
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
  },
  {
    triggers = ["open", "show"];
    opacity = {
      curve = "cubic-bezier(0,1,1,1)";
      duration = 0.3;
      start = 0;
      end = "window-raw-opacity";
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.3;
      start = 0.6;
      end = 1;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  },
  {
    triggers = ["geometry"]
    scale-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-width-before / window-width";
      end = 1;
    }
    scale-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-height-before / window-height";
      end = 1;
    }
    offset-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-x-before - window-x";
      end = 0;
    }
    offset-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-y-before - window-y";
      end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)
